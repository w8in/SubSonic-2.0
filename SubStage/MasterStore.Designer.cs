//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SubSonic.SubStage {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MasterStore")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MasterStore : global::System.Data.DataSet {
        
        private ProjectsDataTable tableProjects;
        
        private ProviderTypesDataTable tableProviderTypes;
        
        private ProvidersDataTable tableProviders;
        
        private ConnectionStringsDataTable tableConnectionStrings;
        
        private SubStageConfigurationDataTable tableSubStageConfiguration;
        
        private global::System.Data.DataRelation relationFK_Providers_Projects;
        
        private global::System.Data.DataRelation relationFK_Projects_Providers;
        
        private global::System.Data.DataRelation relationFK_ConnectionStrings_Providers;
        
        private global::System.Data.DataRelation relationFK_ProviderTypes_Providers;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MasterStore() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MasterStore(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                if ((ds.Tables["ProviderTypes"] != null)) {
                    base.Tables.Add(new ProviderTypesDataTable(ds.Tables["ProviderTypes"]));
                }
                if ((ds.Tables["Providers"] != null)) {
                    base.Tables.Add(new ProvidersDataTable(ds.Tables["Providers"]));
                }
                if ((ds.Tables["ConnectionStrings"] != null)) {
                    base.Tables.Add(new ConnectionStringsDataTable(ds.Tables["ConnectionStrings"]));
                }
                if ((ds.Tables["SubStageConfiguration"] != null)) {
                    base.Tables.Add(new SubStageConfigurationDataTable(ds.Tables["SubStageConfiguration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectsDataTable Projects {
            get {
                return this.tableProjects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProviderTypesDataTable ProviderTypes {
            get {
                return this.tableProviderTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProvidersDataTable Providers {
            get {
                return this.tableProviders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConnectionStringsDataTable ConnectionStrings {
            get {
                return this.tableConnectionStrings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubStageConfigurationDataTable SubStageConfiguration {
            get {
                return this.tableSubStageConfiguration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MasterStore cln = ((MasterStore)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                if ((ds.Tables["ProviderTypes"] != null)) {
                    base.Tables.Add(new ProviderTypesDataTable(ds.Tables["ProviderTypes"]));
                }
                if ((ds.Tables["Providers"] != null)) {
                    base.Tables.Add(new ProvidersDataTable(ds.Tables["Providers"]));
                }
                if ((ds.Tables["ConnectionStrings"] != null)) {
                    base.Tables.Add(new ConnectionStringsDataTable(ds.Tables["ConnectionStrings"]));
                }
                if ((ds.Tables["SubStageConfiguration"] != null)) {
                    base.Tables.Add(new SubStageConfigurationDataTable(ds.Tables["SubStageConfiguration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProjects = ((ProjectsDataTable)(base.Tables["Projects"]));
            if ((initTable == true)) {
                if ((this.tableProjects != null)) {
                    this.tableProjects.InitVars();
                }
            }
            this.tableProviderTypes = ((ProviderTypesDataTable)(base.Tables["ProviderTypes"]));
            if ((initTable == true)) {
                if ((this.tableProviderTypes != null)) {
                    this.tableProviderTypes.InitVars();
                }
            }
            this.tableProviders = ((ProvidersDataTable)(base.Tables["Providers"]));
            if ((initTable == true)) {
                if ((this.tableProviders != null)) {
                    this.tableProviders.InitVars();
                }
            }
            this.tableConnectionStrings = ((ConnectionStringsDataTable)(base.Tables["ConnectionStrings"]));
            if ((initTable == true)) {
                if ((this.tableConnectionStrings != null)) {
                    this.tableConnectionStrings.InitVars();
                }
            }
            this.tableSubStageConfiguration = ((SubStageConfigurationDataTable)(base.Tables["SubStageConfiguration"]));
            if ((initTable == true)) {
                if ((this.tableSubStageConfiguration != null)) {
                    this.tableSubStageConfiguration.InitVars();
                }
            }
            this.relationFK_Providers_Projects = this.Relations["FK_Providers_Projects"];
            this.relationFK_Projects_Providers = this.Relations["FK_Projects_Providers"];
            this.relationFK_ConnectionStrings_Providers = this.Relations["FK_ConnectionStrings_Providers"];
            this.relationFK_ProviderTypes_Providers = this.Relations["FK_ProviderTypes_Providers"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MasterStore";
            this.Prefix = "";
            this.Namespace = "http://subsonicproject.com/schemas/MasterStore.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjects = new ProjectsDataTable();
            base.Tables.Add(this.tableProjects);
            this.tableProviderTypes = new ProviderTypesDataTable();
            base.Tables.Add(this.tableProviderTypes);
            this.tableProviders = new ProvidersDataTable();
            base.Tables.Add(this.tableProviders);
            this.tableConnectionStrings = new ConnectionStringsDataTable();
            base.Tables.Add(this.tableConnectionStrings);
            this.tableSubStageConfiguration = new SubStageConfigurationDataTable();
            base.Tables.Add(this.tableSubStageConfiguration);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Providers_Projects", new global::System.Data.DataColumn[] {
                        this.tableProviders.ProviderIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProjects.DefaultProviderColumn});
            this.tableProjects.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_Projects_Providers", new global::System.Data.DataColumn[] {
                        this.tableProjects.ProjectIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ProjectIdColumn});
            this.tableProviders.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ConnectionStrings_Providers", new global::System.Data.DataColumn[] {
                        this.tableConnectionStrings.ConnectionStringIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ConnectionStringIdColumn});
            this.tableProviders.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_ProviderTypes_Providers", new global::System.Data.DataColumn[] {
                        this.tableProviderTypes.ProviderTypeIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ProviderTypeIdColumn});
            this.tableProviders.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_Providers_Projects = new global::System.Data.DataRelation("FK_Providers_Projects", new global::System.Data.DataColumn[] {
                        this.tableProviders.ProviderIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProjects.DefaultProviderColumn}, false);
            this.Relations.Add(this.relationFK_Providers_Projects);
            this.relationFK_Projects_Providers = new global::System.Data.DataRelation("FK_Projects_Providers", new global::System.Data.DataColumn[] {
                        this.tableProjects.ProjectIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ProjectIdColumn}, false);
            this.Relations.Add(this.relationFK_Projects_Providers);
            this.relationFK_ConnectionStrings_Providers = new global::System.Data.DataRelation("FK_ConnectionStrings_Providers", new global::System.Data.DataColumn[] {
                        this.tableConnectionStrings.ConnectionStringIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ConnectionStringIdColumn}, false);
            this.Relations.Add(this.relationFK_ConnectionStrings_Providers);
            this.relationFK_ProviderTypes_Providers = new global::System.Data.DataRelation("FK_ProviderTypes_Providers", new global::System.Data.DataColumn[] {
                        this.tableProviderTypes.ProviderTypeIdColumn}, new global::System.Data.DataColumn[] {
                        this.tableProviders.ProviderTypeIdColumn}, false);
            this.Relations.Add(this.relationFK_ProviderTypes_Providers);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProjects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProviderTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProviders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConnectionStrings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSubStageConfiguration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MasterStore ds = new MasterStore();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProjectsRowChangeEventHandler(object sender, ProjectsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProviderTypesRowChangeEventHandler(object sender, ProviderTypesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ProvidersRowChangeEventHandler(object sender, ProvidersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ConnectionStringsRowChangeEventHandler(object sender, ConnectionStringsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SubStageConfigurationRowChangeEventHandler(object sender, SubStageConfigurationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectsDataTable : global::System.Data.TypedTableBase<ProjectsRow> {
            
            private global::System.Data.DataColumn columnProjectId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnOriginalLocation;
            
            private global::System.Data.DataColumn columnDefaultProvider;
            
            private global::System.Data.DataColumn columnTemplateDirectory;
            
            private global::System.Data.DataColumn columnCodeGenerationPath;
            
            private global::System.Data.DataColumn columnOrganizeCodeByProvider;
            
            private global::System.Data.DataColumn columnEnableTrace;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsDataTable() {
                this.TableName = "Projects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProjectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIdColumn {
                get {
                    return this.columnProjectId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OriginalLocationColumn {
                get {
                    return this.columnOriginalLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DefaultProviderColumn {
                get {
                    return this.columnDefaultProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemplateDirectoryColumn {
                get {
                    return this.columnTemplateDirectory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeGenerationPathColumn {
                get {
                    return this.columnCodeGenerationPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganizeCodeByProviderColumn {
                get {
                    return this.columnOrganizeCodeByProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnableTraceColumn {
                get {
                    return this.columnEnableTrace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow this[int index] {
                get {
                    return ((ProjectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProjectsRow(ProjectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow AddProjectsRow(string Name, string OriginalLocation, ProvidersRow parentProvidersRowByFK_Providers_Projects, string TemplateDirectory, string CodeGenerationPath, bool OrganizeCodeByProvider, bool EnableTrace) {
                ProjectsRow rowProjectsRow = ((ProjectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        OriginalLocation,
                        null,
                        TemplateDirectory,
                        CodeGenerationPath,
                        OrganizeCodeByProvider,
                        EnableTrace};
                if ((parentProvidersRowByFK_Providers_Projects != null)) {
                    columnValuesArray[3] = parentProvidersRowByFK_Providers_Projects[0];
                }
                rowProjectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectsRow);
                return rowProjectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow FindByProjectId(int ProjectId) {
                return ((ProjectsRow)(this.Rows.Find(new object[] {
                            ProjectId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectsDataTable cln = ((ProjectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProjectId = base.Columns["ProjectId"];
                this.columnName = base.Columns["Name"];
                this.columnOriginalLocation = base.Columns["OriginalLocation"];
                this.columnDefaultProvider = base.Columns["DefaultProvider"];
                this.columnTemplateDirectory = base.Columns["TemplateDirectory"];
                this.columnCodeGenerationPath = base.Columns["CodeGenerationPath"];
                this.columnOrganizeCodeByProvider = base.Columns["OrganizeCodeByProvider"];
                this.columnEnableTrace = base.Columns["EnableTrace"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProjectId = new global::System.Data.DataColumn("ProjectId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnOriginalLocation = new global::System.Data.DataColumn("OriginalLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOriginalLocation);
                this.columnDefaultProvider = new global::System.Data.DataColumn("DefaultProvider", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultProvider);
                this.columnTemplateDirectory = new global::System.Data.DataColumn("TemplateDirectory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemplateDirectory);
                this.columnCodeGenerationPath = new global::System.Data.DataColumn("CodeGenerationPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeGenerationPath);
                this.columnOrganizeCodeByProvider = new global::System.Data.DataColumn("OrganizeCodeByProvider", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizeCodeByProvider);
                this.columnEnableTrace = new global::System.Data.DataColumn("EnableTrace", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableTrace);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PKProjects", new global::System.Data.DataColumn[] {
                                this.columnProjectId}, true));
                this.columnProjectId.AutoIncrement = true;
                this.columnProjectId.AllowDBNull = false;
                this.columnProjectId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.Caption = "Project Name";
                this.columnName.DefaultValue = ((string)("New Project"));
                this.columnOriginalLocation.AllowDBNull = false;
                this.columnOriginalLocation.DefaultValue = ((string)(""));
                this.columnDefaultProvider.Caption = "Default Provider";
                this.columnTemplateDirectory.AllowDBNull = false;
                this.columnTemplateDirectory.Caption = "Template Directory";
                this.columnTemplateDirectory.DefaultValue = ((string)(""));
                this.columnCodeGenerationPath.AllowDBNull = false;
                this.columnCodeGenerationPath.Caption = "Output directory for classes generated against this project. This can be overridd" +
                    "en at the provider level using the property of the same name.";
                this.columnCodeGenerationPath.DefaultValue = ((string)(""));
                this.columnOrganizeCodeByProvider.AllowDBNull = false;
                this.columnOrganizeCodeByProvider.Caption = "Whether or not SubStage should place generated code in directories corresponding " +
                    "to the provider name.";
                this.columnOrganizeCodeByProvider.DefaultValue = ((bool)(true));
                this.columnEnableTrace.Caption = "Enable Tracing";
                this.columnEnableTrace.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow NewProjectsRow() {
                return ((ProjectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectsRowChanged != null)) {
                    this.ProjectsRowChanged(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectsRowChanging != null)) {
                    this.ProjectsRowChanging(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectsRowDeleted != null)) {
                    this.ProjectsRowDeleted(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectsRowDeleting != null)) {
                    this.ProjectsRowDeleting(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProjectsRow(ProjectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MasterStore ds = new MasterStore();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProviderTypesDataTable : global::System.Data.TypedTableBase<ProviderTypesRow> {
            
            private global::System.Data.DataColumn columnProviderTypeId;
            
            private global::System.Data.DataColumn columnDisplayName;
            
            private global::System.Data.DataColumn columnInternalName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesDataTable() {
                this.TableName = "ProviderTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProviderTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProviderTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderTypeIdColumn {
                get {
                    return this.columnProviderTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InternalNameColumn {
                get {
                    return this.columnInternalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow this[int index] {
                get {
                    return ((ProviderTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProviderTypesRowChangeEventHandler ProviderTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProviderTypesRowChangeEventHandler ProviderTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProviderTypesRowChangeEventHandler ProviderTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProviderTypesRowChangeEventHandler ProviderTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProviderTypesRow(ProviderTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow AddProviderTypesRow(int ProviderTypeId, string DisplayName, string InternalName) {
                ProviderTypesRow rowProviderTypesRow = ((ProviderTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ProviderTypeId,
                        DisplayName,
                        InternalName};
                rowProviderTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProviderTypesRow);
                return rowProviderTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow FindByProviderTypeId(int ProviderTypeId) {
                return ((ProviderTypesRow)(this.Rows.Find(new object[] {
                            ProviderTypeId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProviderTypesDataTable cln = ((ProviderTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProviderTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProviderTypeId = base.Columns["ProviderTypeId"];
                this.columnDisplayName = base.Columns["DisplayName"];
                this.columnInternalName = base.Columns["InternalName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProviderTypeId = new global::System.Data.DataColumn("ProviderTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderTypeId);
                this.columnDisplayName = new global::System.Data.DataColumn("DisplayName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayName);
                this.columnInternalName = new global::System.Data.DataColumn("InternalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternalName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PKProviderTypes", new global::System.Data.DataColumn[] {
                                this.columnProviderTypeId}, true));
                this.columnProviderTypeId.AllowDBNull = false;
                this.columnProviderTypeId.Unique = true;
                this.columnDisplayName.AllowDBNull = false;
                this.columnInternalName.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow NewProviderTypesRow() {
                return ((ProviderTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProviderTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProviderTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProviderTypesRowChanged != null)) {
                    this.ProviderTypesRowChanged(this, new ProviderTypesRowChangeEvent(((ProviderTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProviderTypesRowChanging != null)) {
                    this.ProviderTypesRowChanging(this, new ProviderTypesRowChangeEvent(((ProviderTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProviderTypesRowDeleted != null)) {
                    this.ProviderTypesRowDeleted(this, new ProviderTypesRowChangeEvent(((ProviderTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProviderTypesRowDeleting != null)) {
                    this.ProviderTypesRowDeleting(this, new ProviderTypesRowChangeEvent(((ProviderTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProviderTypesRow(ProviderTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MasterStore ds = new MasterStore();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProviderTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProvidersDataTable : global::System.Data.TypedTableBase<ProvidersRow> {
            
            private global::System.Data.DataColumn columnProviderId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnProjectId;
            
            private global::System.Data.DataColumn columnProviderTypeId;
            
            private global::System.Data.DataColumn columnConnectionStringId;
            
            private global::System.Data.DataColumn columnCodeGenerationPath;
            
            private global::System.Data.DataColumn columnOrganizeCodeByProvider;
            
            private global::System.Data.DataColumn columnAppendWith;
            
            private global::System.Data.DataColumn columnAdditionalNamespaces;
            
            private global::System.Data.DataColumn columnExcludeProcedureList;
            
            private global::System.Data.DataColumn columnExcludeTableList;
            
            private global::System.Data.DataColumn columnExtractClassNameFromSPName;
            
            private global::System.Data.DataColumn columnFixDatabaseObjectCasing;
            
            private global::System.Data.DataColumn columnFixPluralClassNames;
            
            private global::System.Data.DataColumn columnGenerateLazyLoads;
            
            private global::System.Data.DataColumn columnGenerateNullableProperties;
            
            private global::System.Data.DataColumn columnGenerateODSControllers;
            
            private global::System.Data.DataColumn columnGenerateRelatedTablesAsProperties;
            
            private global::System.Data.DataColumn columnGeneratedNamespace;
            
            private global::System.Data.DataColumn columnIncludeProcedureList;
            
            private global::System.Data.DataColumn columnIncludeTableList;
            
            private global::System.Data.DataColumn columnManyToManySuffix;
            
            private global::System.Data.DataColumn columnRegexDictionaryReplace;
            
            private global::System.Data.DataColumn columnRegexIgnoreCase;
            
            private global::System.Data.DataColumn columnRegexMatchExpression;
            
            private global::System.Data.DataColumn columnRegexReplaceExpression;
            
            private global::System.Data.DataColumn columnRelatedTableLoadPrefix;
            
            private global::System.Data.DataColumn columnRemoveUnderscores;
            
            private global::System.Data.DataColumn columnSetPropertyDefaultsFromDatabase;
            
            private global::System.Data.DataColumn columnSPClassName;
            
            private global::System.Data.DataColumn columnSPStartsWith;
            
            private global::System.Data.DataColumn columnStoredProcedureBaseClass;
            
            private global::System.Data.DataColumn columnStripColumnText;
            
            private global::System.Data.DataColumn columnStripParamText;
            
            private global::System.Data.DataColumn columnStripSPText;
            
            private global::System.Data.DataColumn columnStripTableText;
            
            private global::System.Data.DataColumn columnStripViewText;
            
            private global::System.Data.DataColumn columnTableBaseClass;
            
            private global::System.Data.DataColumn columnUseExtendedProperties;
            
            private global::System.Data.DataColumn columnUseSPs;
            
            private global::System.Data.DataColumn columnUseUTC;
            
            private global::System.Data.DataColumn columnViewBaseClass;
            
            private global::System.Data.DataColumn columnViewStartsWith;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersDataTable() {
                this.TableName = "Providers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProvidersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ProvidersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderIdColumn {
                get {
                    return this.columnProviderId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIdColumn {
                get {
                    return this.columnProjectId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProviderTypeIdColumn {
                get {
                    return this.columnProviderTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConnectionStringIdColumn {
                get {
                    return this.columnConnectionStringId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeGenerationPathColumn {
                get {
                    return this.columnCodeGenerationPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganizeCodeByProviderColumn {
                get {
                    return this.columnOrganizeCodeByProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppendWithColumn {
                get {
                    return this.columnAppendWith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdditionalNamespacesColumn {
                get {
                    return this.columnAdditionalNamespaces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcludeProcedureListColumn {
                get {
                    return this.columnExcludeProcedureList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExcludeTableListColumn {
                get {
                    return this.columnExcludeTableList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtractClassNameFromSPNameColumn {
                get {
                    return this.columnExtractClassNameFromSPName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixDatabaseObjectCasingColumn {
                get {
                    return this.columnFixDatabaseObjectCasing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FixPluralClassNamesColumn {
                get {
                    return this.columnFixPluralClassNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerateLazyLoadsColumn {
                get {
                    return this.columnGenerateLazyLoads;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerateNullablePropertiesColumn {
                get {
                    return this.columnGenerateNullableProperties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerateODSControllersColumn {
                get {
                    return this.columnGenerateODSControllers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenerateRelatedTablesAsPropertiesColumn {
                get {
                    return this.columnGenerateRelatedTablesAsProperties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GeneratedNamespaceColumn {
                get {
                    return this.columnGeneratedNamespace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncludeProcedureListColumn {
                get {
                    return this.columnIncludeProcedureList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IncludeTableListColumn {
                get {
                    return this.columnIncludeTableList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManyToManySuffixColumn {
                get {
                    return this.columnManyToManySuffix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexDictionaryReplaceColumn {
                get {
                    return this.columnRegexDictionaryReplace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexIgnoreCaseColumn {
                get {
                    return this.columnRegexIgnoreCase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexMatchExpressionColumn {
                get {
                    return this.columnRegexMatchExpression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexReplaceExpressionColumn {
                get {
                    return this.columnRegexReplaceExpression;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RelatedTableLoadPrefixColumn {
                get {
                    return this.columnRelatedTableLoadPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemoveUnderscoresColumn {
                get {
                    return this.columnRemoveUnderscores;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SetPropertyDefaultsFromDatabaseColumn {
                get {
                    return this.columnSetPropertyDefaultsFromDatabase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPClassNameColumn {
                get {
                    return this.columnSPClassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPStartsWithColumn {
                get {
                    return this.columnSPStartsWith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoredProcedureBaseClassColumn {
                get {
                    return this.columnStoredProcedureBaseClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StripColumnTextColumn {
                get {
                    return this.columnStripColumnText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StripParamTextColumn {
                get {
                    return this.columnStripParamText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StripSPTextColumn {
                get {
                    return this.columnStripSPText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StripTableTextColumn {
                get {
                    return this.columnStripTableText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StripViewTextColumn {
                get {
                    return this.columnStripViewText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TableBaseClassColumn {
                get {
                    return this.columnTableBaseClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseExtendedPropertiesColumn {
                get {
                    return this.columnUseExtendedProperties;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseSPsColumn {
                get {
                    return this.columnUseSPs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseUTCColumn {
                get {
                    return this.columnUseUTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewBaseClassColumn {
                get {
                    return this.columnViewBaseClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ViewStartsWithColumn {
                get {
                    return this.columnViewStartsWith;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow this[int index] {
                get {
                    return ((ProvidersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProvidersRowChangeEventHandler ProvidersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProvidersRowChangeEventHandler ProvidersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProvidersRowChangeEventHandler ProvidersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ProvidersRowChangeEventHandler ProvidersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProvidersRow(ProvidersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow AddProvidersRow(
                        string Name, 
                        ProjectsRow parentProjectsRowByFK_Projects_Providers, 
                        ProviderTypesRow parentProviderTypesRowByFK_ProviderTypes_Providers, 
                        ConnectionStringsRow parentConnectionStringsRowByFK_ConnectionStrings_Providers, 
                        string CodeGenerationPath, 
                        bool OrganizeCodeByProvider, 
                        string AppendWith, 
                        string AdditionalNamespaces, 
                        string ExcludeProcedureList, 
                        string ExcludeTableList, 
                        bool ExtractClassNameFromSPName, 
                        bool FixDatabaseObjectCasing, 
                        bool FixPluralClassNames, 
                        bool GenerateLazyLoads, 
                        bool GenerateNullableProperties, 
                        bool GenerateODSControllers, 
                        bool GenerateRelatedTablesAsProperties, 
                        string GeneratedNamespace, 
                        string IncludeProcedureList, 
                        string IncludeTableList, 
                        string ManyToManySuffix, 
                        string RegexDictionaryReplace, 
                        bool RegexIgnoreCase, 
                        string RegexMatchExpression, 
                        string RegexReplaceExpression, 
                        string RelatedTableLoadPrefix, 
                        bool RemoveUnderscores, 
                        bool SetPropertyDefaultsFromDatabase, 
                        string SPClassName, 
                        string SPStartsWith, 
                        string StoredProcedureBaseClass, 
                        string StripColumnText, 
                        string StripParamText, 
                        string StripSPText, 
                        string StripTableText, 
                        string StripViewText, 
                        string TableBaseClass, 
                        bool UseExtendedProperties, 
                        bool UseSPs, 
                        bool UseUTC, 
                        string ViewBaseClass, 
                        string ViewStartsWith) {
                ProvidersRow rowProvidersRow = ((ProvidersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        null,
                        null,
                        null,
                        CodeGenerationPath,
                        OrganizeCodeByProvider,
                        AppendWith,
                        AdditionalNamespaces,
                        ExcludeProcedureList,
                        ExcludeTableList,
                        ExtractClassNameFromSPName,
                        FixDatabaseObjectCasing,
                        FixPluralClassNames,
                        GenerateLazyLoads,
                        GenerateNullableProperties,
                        GenerateODSControllers,
                        GenerateRelatedTablesAsProperties,
                        GeneratedNamespace,
                        IncludeProcedureList,
                        IncludeTableList,
                        ManyToManySuffix,
                        RegexDictionaryReplace,
                        RegexIgnoreCase,
                        RegexMatchExpression,
                        RegexReplaceExpression,
                        RelatedTableLoadPrefix,
                        RemoveUnderscores,
                        SetPropertyDefaultsFromDatabase,
                        SPClassName,
                        SPStartsWith,
                        StoredProcedureBaseClass,
                        StripColumnText,
                        StripParamText,
                        StripSPText,
                        StripTableText,
                        StripViewText,
                        TableBaseClass,
                        UseExtendedProperties,
                        UseSPs,
                        UseUTC,
                        ViewBaseClass,
                        ViewStartsWith};
                if ((parentProjectsRowByFK_Projects_Providers != null)) {
                    columnValuesArray[2] = parentProjectsRowByFK_Projects_Providers[0];
                }
                if ((parentProviderTypesRowByFK_ProviderTypes_Providers != null)) {
                    columnValuesArray[3] = parentProviderTypesRowByFK_ProviderTypes_Providers[0];
                }
                if ((parentConnectionStringsRowByFK_ConnectionStrings_Providers != null)) {
                    columnValuesArray[4] = parentConnectionStringsRowByFK_ConnectionStrings_Providers[0];
                }
                rowProvidersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProvidersRow);
                return rowProvidersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow FindByProviderId(int ProviderId) {
                return ((ProvidersRow)(this.Rows.Find(new object[] {
                            ProviderId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProvidersDataTable cln = ((ProvidersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProvidersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnProviderId = base.Columns["ProviderId"];
                this.columnName = base.Columns["Name"];
                this.columnProjectId = base.Columns["ProjectId"];
                this.columnProviderTypeId = base.Columns["ProviderTypeId"];
                this.columnConnectionStringId = base.Columns["ConnectionStringId"];
                this.columnCodeGenerationPath = base.Columns["CodeGenerationPath"];
                this.columnOrganizeCodeByProvider = base.Columns["OrganizeCodeByProvider"];
                this.columnAppendWith = base.Columns["AppendWith"];
                this.columnAdditionalNamespaces = base.Columns["AdditionalNamespaces"];
                this.columnExcludeProcedureList = base.Columns["ExcludeProcedureList"];
                this.columnExcludeTableList = base.Columns["ExcludeTableList"];
                this.columnExtractClassNameFromSPName = base.Columns["ExtractClassNameFromSPName"];
                this.columnFixDatabaseObjectCasing = base.Columns["FixDatabaseObjectCasing"];
                this.columnFixPluralClassNames = base.Columns["FixPluralClassNames"];
                this.columnGenerateLazyLoads = base.Columns["GenerateLazyLoads"];
                this.columnGenerateNullableProperties = base.Columns["GenerateNullableProperties"];
                this.columnGenerateODSControllers = base.Columns["GenerateODSControllers"];
                this.columnGenerateRelatedTablesAsProperties = base.Columns["GenerateRelatedTablesAsProperties"];
                this.columnGeneratedNamespace = base.Columns["GeneratedNamespace"];
                this.columnIncludeProcedureList = base.Columns["IncludeProcedureList"];
                this.columnIncludeTableList = base.Columns["IncludeTableList"];
                this.columnManyToManySuffix = base.Columns["ManyToManySuffix"];
                this.columnRegexDictionaryReplace = base.Columns["RegexDictionaryReplace"];
                this.columnRegexIgnoreCase = base.Columns["RegexIgnoreCase"];
                this.columnRegexMatchExpression = base.Columns["RegexMatchExpression"];
                this.columnRegexReplaceExpression = base.Columns["RegexReplaceExpression"];
                this.columnRelatedTableLoadPrefix = base.Columns["RelatedTableLoadPrefix"];
                this.columnRemoveUnderscores = base.Columns["RemoveUnderscores"];
                this.columnSetPropertyDefaultsFromDatabase = base.Columns["SetPropertyDefaultsFromDatabase"];
                this.columnSPClassName = base.Columns["SPClassName"];
                this.columnSPStartsWith = base.Columns["SPStartsWith"];
                this.columnStoredProcedureBaseClass = base.Columns["StoredProcedureBaseClass"];
                this.columnStripColumnText = base.Columns["StripColumnText"];
                this.columnStripParamText = base.Columns["StripParamText"];
                this.columnStripSPText = base.Columns["StripSPText"];
                this.columnStripTableText = base.Columns["StripTableText"];
                this.columnStripViewText = base.Columns["StripViewText"];
                this.columnTableBaseClass = base.Columns["TableBaseClass"];
                this.columnUseExtendedProperties = base.Columns["UseExtendedProperties"];
                this.columnUseSPs = base.Columns["UseSPs"];
                this.columnUseUTC = base.Columns["UseUTC"];
                this.columnViewBaseClass = base.Columns["ViewBaseClass"];
                this.columnViewStartsWith = base.Columns["ViewStartsWith"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnProviderId = new global::System.Data.DataColumn("ProviderId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnProjectId = new global::System.Data.DataColumn("ProjectId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectId);
                this.columnProviderTypeId = new global::System.Data.DataColumn("ProviderTypeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProviderTypeId);
                this.columnConnectionStringId = new global::System.Data.DataColumn("ConnectionStringId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionStringId);
                this.columnCodeGenerationPath = new global::System.Data.DataColumn("CodeGenerationPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeGenerationPath);
                this.columnOrganizeCodeByProvider = new global::System.Data.DataColumn("OrganizeCodeByProvider", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizeCodeByProvider);
                this.columnAppendWith = new global::System.Data.DataColumn("AppendWith", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppendWith);
                this.columnAdditionalNamespaces = new global::System.Data.DataColumn("AdditionalNamespaces", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdditionalNamespaces);
                this.columnExcludeProcedureList = new global::System.Data.DataColumn("ExcludeProcedureList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcludeProcedureList);
                this.columnExcludeTableList = new global::System.Data.DataColumn("ExcludeTableList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcludeTableList);
                this.columnExtractClassNameFromSPName = new global::System.Data.DataColumn("ExtractClassNameFromSPName", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtractClassNameFromSPName);
                this.columnFixDatabaseObjectCasing = new global::System.Data.DataColumn("FixDatabaseObjectCasing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixDatabaseObjectCasing);
                this.columnFixPluralClassNames = new global::System.Data.DataColumn("FixPluralClassNames", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixPluralClassNames);
                this.columnGenerateLazyLoads = new global::System.Data.DataColumn("GenerateLazyLoads", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenerateLazyLoads);
                this.columnGenerateNullableProperties = new global::System.Data.DataColumn("GenerateNullableProperties", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenerateNullableProperties);
                this.columnGenerateODSControllers = new global::System.Data.DataColumn("GenerateODSControllers", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenerateODSControllers);
                this.columnGenerateRelatedTablesAsProperties = new global::System.Data.DataColumn("GenerateRelatedTablesAsProperties", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenerateRelatedTablesAsProperties);
                this.columnGeneratedNamespace = new global::System.Data.DataColumn("GeneratedNamespace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneratedNamespace);
                this.columnIncludeProcedureList = new global::System.Data.DataColumn("IncludeProcedureList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeProcedureList);
                this.columnIncludeTableList = new global::System.Data.DataColumn("IncludeTableList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIncludeTableList);
                this.columnManyToManySuffix = new global::System.Data.DataColumn("ManyToManySuffix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManyToManySuffix);
                this.columnRegexDictionaryReplace = new global::System.Data.DataColumn("RegexDictionaryReplace", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexDictionaryReplace);
                this.columnRegexIgnoreCase = new global::System.Data.DataColumn("RegexIgnoreCase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexIgnoreCase);
                this.columnRegexMatchExpression = new global::System.Data.DataColumn("RegexMatchExpression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexMatchExpression);
                this.columnRegexReplaceExpression = new global::System.Data.DataColumn("RegexReplaceExpression", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexReplaceExpression);
                this.columnRelatedTableLoadPrefix = new global::System.Data.DataColumn("RelatedTableLoadPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedTableLoadPrefix);
                this.columnRemoveUnderscores = new global::System.Data.DataColumn("RemoveUnderscores", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemoveUnderscores);
                this.columnSetPropertyDefaultsFromDatabase = new global::System.Data.DataColumn("SetPropertyDefaultsFromDatabase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetPropertyDefaultsFromDatabase);
                this.columnSPClassName = new global::System.Data.DataColumn("SPClassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPClassName);
                this.columnSPStartsWith = new global::System.Data.DataColumn("SPStartsWith", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPStartsWith);
                this.columnStoredProcedureBaseClass = new global::System.Data.DataColumn("StoredProcedureBaseClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoredProcedureBaseClass);
                this.columnStripColumnText = new global::System.Data.DataColumn("StripColumnText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStripColumnText);
                this.columnStripParamText = new global::System.Data.DataColumn("StripParamText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStripParamText);
                this.columnStripSPText = new global::System.Data.DataColumn("StripSPText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStripSPText);
                this.columnStripTableText = new global::System.Data.DataColumn("StripTableText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStripTableText);
                this.columnStripViewText = new global::System.Data.DataColumn("StripViewText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStripViewText);
                this.columnTableBaseClass = new global::System.Data.DataColumn("TableBaseClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableBaseClass);
                this.columnUseExtendedProperties = new global::System.Data.DataColumn("UseExtendedProperties", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseExtendedProperties);
                this.columnUseSPs = new global::System.Data.DataColumn("UseSPs", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseSPs);
                this.columnUseUTC = new global::System.Data.DataColumn("UseUTC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseUTC);
                this.columnViewBaseClass = new global::System.Data.DataColumn("ViewBaseClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewBaseClass);
                this.columnViewStartsWith = new global::System.Data.DataColumn("ViewStartsWith", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnViewStartsWith);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PKProviders", new global::System.Data.DataColumn[] {
                                this.columnProviderId}, true));
                this.columnProviderId.AutoIncrement = true;
                this.columnProviderId.AllowDBNull = false;
                this.columnProviderId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.Caption = "The name of the provider.";
                this.columnName.DefaultValue = ((string)("New Provider"));
                this.columnProjectId.Caption = "The project that this provider belongs to.";
                this.columnProviderTypeId.Caption = "The (database) type of the provider.";
                this.columnConnectionStringId.Caption = "The connection string used for this provider.";
                this.columnCodeGenerationPath.AllowDBNull = false;
                this.columnCodeGenerationPath.Caption = "Output directory for classes generated against this provider.";
                this.columnCodeGenerationPath.DefaultValue = ((string)(""));
                this.columnOrganizeCodeByProvider.AllowDBNull = false;
                this.columnOrganizeCodeByProvider.Caption = "Whether or not SubStage should place generated code in directories corresponding " +
                    "to the provider name.";
                this.columnOrganizeCodeByProvider.DefaultValue = ((bool)(true));
                this.columnAppendWith.AllowDBNull = false;
                this.columnAppendWith.Caption = "Text to append to generated types in the event of reserved type conflicts.";
                this.columnAppendWith.DefaultValue = ((string)("X"));
                this.columnAdditionalNamespaces.AllowDBNull = false;
                this.columnAdditionalNamespaces.Caption = "A comma separated list of namespaces to included in template generation.";
                this.columnAdditionalNamespaces.DefaultValue = ((string)(""));
                this.columnExcludeProcedureList.AllowDBNull = false;
                this.columnExcludeProcedureList.Caption = "A comma-separated list of stored procedure names to be excluded from generation.";
                this.columnExcludeProcedureList.DefaultValue = ((string)(""));
                this.columnExcludeTableList.AllowDBNull = false;
                this.columnExcludeTableList.Caption = "A comma-separated list of table names to be excluded from generation.";
                this.columnExcludeTableList.DefaultValue = ((string)(""));
                this.columnExtractClassNameFromSPName.AllowDBNull = false;
                this.columnExtractClassNameFromSPName.Caption = "Whether or not SubSonic should attempt extract the class name from the name of th" +
                    "e stored procedure.";
                this.columnExtractClassNameFromSPName.DefaultValue = ((bool)(false));
                this.columnFixDatabaseObjectCasing.AllowDBNull = false;
                this.columnFixDatabaseObjectCasing.Caption = "Whether or not SubSonic should fix the casing of generated types.";
                this.columnFixDatabaseObjectCasing.DefaultValue = ((bool)(true));
                this.columnFixPluralClassNames.AllowDBNull = false;
                this.columnFixPluralClassNames.Caption = "Whether or not SubSonic should attempt to convert class names to the singular wor" +
                    "d form.";
                this.columnFixPluralClassNames.DefaultValue = ((bool)(true));
                this.columnGenerateLazyLoads.AllowDBNull = false;
                this.columnGenerateLazyLoads.Caption = "Whether or not SubSonic should generate lazy loads on related child row objects.";
                this.columnGenerateLazyLoads.DefaultValue = ((bool)(false));
                this.columnGenerateNullableProperties.Caption = "Whether or not properties should be generated with nullable types when the underl" +
                    "ying database column is nullable.";
                this.columnGenerateNullableProperties.DefaultValue = ((bool)(true));
                this.columnGenerateODSControllers.AllowDBNull = false;
                this.columnGenerateODSControllers.Caption = "Whether or not SubSonic should generate controller classes when generating code.";
                this.columnGenerateODSControllers.DefaultValue = ((bool)(true));
                this.columnGenerateRelatedTablesAsProperties.AllowDBNull = false;
                this.columnGenerateRelatedTablesAsProperties.Caption = "Whether or not related child table references should be generated as properties i" +
                    "nstead of methods.";
                this.columnGenerateRelatedTablesAsProperties.DefaultValue = ((bool)(false));
                this.columnGeneratedNamespace.AllowDBNull = false;
                this.columnGeneratedNamespace.DefaultValue = ((string)("SubSonic.Generated"));
                this.columnIncludeProcedureList.AllowDBNull = false;
                this.columnIncludeProcedureList.Caption = "A comma-separated list of stored procedures to include in generation.";
                this.columnIncludeProcedureList.DefaultValue = ((string)("*"));
                this.columnIncludeTableList.AllowDBNull = false;
                this.columnIncludeTableList.Caption = "A comma-separated list of tables to include in generation.";
                this.columnIncludeTableList.DefaultValue = ((string)("*"));
                this.columnManyToManySuffix.AllowDBNull = false;
                this.columnManyToManySuffix.Caption = "The suffix to append to the name when generating Many-to-Many methods. ";
                this.columnManyToManySuffix.DefaultValue = ((string)("_Map"));
                this.columnRegexDictionaryReplace.AllowDBNull = false;
                this.columnRegexDictionaryReplace.Caption = "A semicolon delimited set of comma seperated pairs for replacement. For example: " +
                    "regexMatchValue1,replacement1;regexMatchValue2,replacementValue2";
                this.columnRegexDictionaryReplace.DefaultValue = ((string)(""));
                this.columnRegexIgnoreCase.AllowDBNull = false;
                this.columnRegexIgnoreCase.DefaultValue = ((bool)(false));
                this.columnRegexMatchExpression.AllowDBNull = false;
                this.columnRegexMatchExpression.Caption = "A globale regular expression match condition to be replaced with the value of Reg" +
                    "exReplaceExpression.";
                this.columnRegexMatchExpression.DefaultValue = ((string)(""));
                this.columnRegexReplaceExpression.AllowDBNull = false;
                this.columnRegexReplaceExpression.Caption = "The value that will be used to replace any matches found using RegexMatchExpressi" +
                    "on.";
                this.columnRegexReplaceExpression.DefaultValue = ((string)(""));
                this.columnRelatedTableLoadPrefix.AllowDBNull = false;
                this.columnRelatedTableLoadPrefix.Caption = "The prefix to apply to the naming of any methods generated for load related table" +
                    "s.";
                this.columnRelatedTableLoadPrefix.DefaultValue = ((string)(""));
                this.columnRemoveUnderscores.AllowDBNull = false;
                this.columnRemoveUnderscores.Caption = "Whether or not SubSonic should remove any underscores it finds when generating co" +
                    "de.";
                this.columnRemoveUnderscores.DefaultValue = ((bool)(true));
                this.columnSetPropertyDefaultsFromDatabase.AllowDBNull = false;
                this.columnSetPropertyDefaultsFromDatabase.Caption = "Whether or not SubSonic will attempt to executing any underlying database default" +
                    " values to initialize generated properties.";
                this.columnSetPropertyDefaultsFromDatabase.DefaultValue = ((bool)(false));
                this.columnSPClassName.AllowDBNull = false;
                this.columnSPClassName.Caption = "The name of the class that any generated classes will be placed in.";
                this.columnSPClassName.DefaultValue = ((string)("StoredProcedures"));
                this.columnSPStartsWith.AllowDBNull = false;
                this.columnSPStartsWith.Caption = "When not empty, specifies a stored procedure name prefix that must be matched in " +
                    "order for a stored procedure wrapper to be generated.";
                this.columnSPStartsWith.DefaultValue = ((string)(""));
                this.columnStoredProcedureBaseClass.AllowDBNull = false;
                this.columnStoredProcedureBaseClass.Caption = "The base class that will be used when generating classes derived from stored proc" +
                    "edures.";
                this.columnStoredProcedureBaseClass.DefaultValue = ((string)("StoredProcedure"));
                this.columnStripColumnText.AllowDBNull = false;
                this.columnStripColumnText.Caption = "Text that should be stripped from the name of any database column when generating" +
                    " classes.";
                this.columnStripColumnText.DefaultValue = ((string)(""));
                this.columnStripParamText.AllowDBNull = false;
                this.columnStripParamText.Caption = "Text that should be stripped from any stored procedure parameter when generating " +
                    "classes.";
                this.columnStripParamText.DefaultValue = ((string)(""));
                this.columnStripSPText.AllowDBNull = false;
                this.columnStripSPText.Caption = "Text that should be stripped from the name of any stored procedure when generatin" +
                    "g classes.";
                this.columnStripSPText.DefaultValue = ((string)(""));
                this.columnStripTableText.AllowDBNull = false;
                this.columnStripTableText.Caption = "Text that should be stripped from the name of any database table when generating " +
                    "classes.";
                this.columnStripTableText.DefaultValue = ((string)(""));
                this.columnStripViewText.AllowDBNull = false;
                this.columnStripViewText.Caption = "Text that should be stripped from the name of any database view when generating c" +
                    "lasses.";
                this.columnStripViewText.DefaultValue = ((string)(""));
                this.columnTableBaseClass.AllowDBNull = false;
                this.columnTableBaseClass.Caption = "The base class that will be used when generating classes derived from tables.";
                this.columnTableBaseClass.DefaultValue = ((string)("ActiveRecord"));
                this.columnUseExtendedProperties.AllowDBNull = false;
                this.columnUseExtendedProperties.Caption = "Whether or not SubSonic should query database objects for supported extended prop" +
                    "erties when generating classes.";
                this.columnUseExtendedProperties.DefaultValue = ((bool)(false));
                this.columnUseSPs.AllowDBNull = false;
                this.columnUseSPs.Caption = "Whether or not SubSonic should generate wrappers for any stored procedures it fin" +
                    "ds.";
                this.columnUseSPs.DefaultValue = ((bool)(true));
                this.columnUseUTC.AllowDBNull = false;
                this.columnUseUTC.Caption = "Whether or not SubSonic should use Universal Time format for managed DateTime col" +
                    "umns.";
                this.columnUseUTC.DefaultValue = ((bool)(false));
                this.columnViewBaseClass.AllowDBNull = false;
                this.columnViewBaseClass.Caption = "The base class that will be used when generating classes derived from views.";
                this.columnViewBaseClass.DefaultValue = ((string)("ReadOnlyRecord"));
                this.columnViewStartsWith.AllowDBNull = false;
                this.columnViewStartsWith.Caption = "When not empty, specifies a stored procedure name prefix that must be matched in " +
                    "order for a view wrapper to be generated.";
                this.columnViewStartsWith.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow NewProvidersRow() {
                return ((ProvidersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProvidersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProvidersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProvidersRowChanged != null)) {
                    this.ProvidersRowChanged(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProvidersRowChanging != null)) {
                    this.ProvidersRowChanging(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProvidersRowDeleted != null)) {
                    this.ProvidersRowDeleted(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProvidersRowDeleting != null)) {
                    this.ProvidersRowDeleting(this, new ProvidersRowChangeEvent(((ProvidersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProvidersRow(ProvidersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MasterStore ds = new MasterStore();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProvidersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConnectionStringsDataTable : global::System.Data.TypedTableBase<ConnectionStringsRow> {
            
            private global::System.Data.DataColumn columnConnectionStringId;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnConnectionString;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsDataTable() {
                this.TableName = "ConnectionStrings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConnectionStringsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ConnectionStringsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConnectionStringIdColumn {
                get {
                    return this.columnConnectionStringId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConnectionStringColumn {
                get {
                    return this.columnConnectionString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow this[int index] {
                get {
                    return ((ConnectionStringsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConnectionStringsRowChangeEventHandler ConnectionStringsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConnectionStringsRowChangeEventHandler ConnectionStringsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConnectionStringsRowChangeEventHandler ConnectionStringsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConnectionStringsRowChangeEventHandler ConnectionStringsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConnectionStringsRow(ConnectionStringsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow AddConnectionStringsRow(string Name, string ConnectionString) {
                ConnectionStringsRow rowConnectionStringsRow = ((ConnectionStringsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Name,
                        ConnectionString};
                rowConnectionStringsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnectionStringsRow);
                return rowConnectionStringsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow FindByConnectionStringId(int ConnectionStringId) {
                return ((ConnectionStringsRow)(this.Rows.Find(new object[] {
                            ConnectionStringId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ConnectionStringsDataTable cln = ((ConnectionStringsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConnectionStringsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnConnectionStringId = base.Columns["ConnectionStringId"];
                this.columnName = base.Columns["Name"];
                this.columnConnectionString = base.Columns["ConnectionString"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnConnectionStringId = new global::System.Data.DataColumn("ConnectionStringId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionStringId);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnConnectionString = new global::System.Data.DataColumn("ConnectionString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnectionString);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("PKConnectionString", new global::System.Data.DataColumn[] {
                                this.columnConnectionStringId}, true));
                this.columnConnectionStringId.AutoIncrement = true;
                this.columnConnectionStringId.AllowDBNull = false;
                this.columnConnectionStringId.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.DefaultValue = ((string)("New Connection String"));
                this.columnConnectionString.AllowDBNull = false;
                this.columnConnectionString.DefaultValue = ((string)("Data Source=(local); Database=Northwind; Integrated Security=true;"));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow NewConnectionStringsRow() {
                return ((ConnectionStringsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConnectionStringsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ConnectionStringsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConnectionStringsRowChanged != null)) {
                    this.ConnectionStringsRowChanged(this, new ConnectionStringsRowChangeEvent(((ConnectionStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConnectionStringsRowChanging != null)) {
                    this.ConnectionStringsRowChanging(this, new ConnectionStringsRowChangeEvent(((ConnectionStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConnectionStringsRowDeleted != null)) {
                    this.ConnectionStringsRowDeleted(this, new ConnectionStringsRowChangeEvent(((ConnectionStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConnectionStringsRowDeleting != null)) {
                    this.ConnectionStringsRowDeleting(this, new ConnectionStringsRowChangeEvent(((ConnectionStringsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConnectionStringsRow(ConnectionStringsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MasterStore ds = new MasterStore();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConnectionStringsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubStageConfigurationDataTable : global::System.Data.TypedTableBase<SubStageConfigurationRow> {
            
            private global::System.Data.DataColumn columnSubStageConfigurationId;
            
            private global::System.Data.DataColumn columnCodeGenerationLanguage;
            
            private global::System.Data.DataColumn columnCodeGenerationPath;
            
            private global::System.Data.DataColumn columnOrganizeCodeByProvider;
            
            private global::System.Data.DataColumn columnWebServerPort;
            
            private global::System.Data.DataColumn columnWebServerRootPath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationDataTable() {
                this.TableName = "SubStageConfiguration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubStageConfigurationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SubStageConfigurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubStageConfigurationIdColumn {
                get {
                    return this.columnSubStageConfigurationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeGenerationLanguageColumn {
                get {
                    return this.columnCodeGenerationLanguage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeGenerationPathColumn {
                get {
                    return this.columnCodeGenerationPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganizeCodeByProviderColumn {
                get {
                    return this.columnOrganizeCodeByProvider;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WebServerPortColumn {
                get {
                    return this.columnWebServerPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WebServerRootPathColumn {
                get {
                    return this.columnWebServerRootPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRow this[int index] {
                get {
                    return ((SubStageConfigurationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubStageConfigurationRowChangeEventHandler SubStageConfigurationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubStageConfigurationRowChangeEventHandler SubStageConfigurationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubStageConfigurationRowChangeEventHandler SubStageConfigurationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SubStageConfigurationRowChangeEventHandler SubStageConfigurationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSubStageConfigurationRow(SubStageConfigurationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRow AddSubStageConfigurationRow(string CodeGenerationLanguage, string CodeGenerationPath, bool OrganizeCodeByProvider, int WebServerPort, string WebServerRootPath) {
                SubStageConfigurationRow rowSubStageConfigurationRow = ((SubStageConfigurationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CodeGenerationLanguage,
                        CodeGenerationPath,
                        OrganizeCodeByProvider,
                        WebServerPort,
                        WebServerRootPath};
                rowSubStageConfigurationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubStageConfigurationRow);
                return rowSubStageConfigurationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRow FindBySubStageConfigurationId(int SubStageConfigurationId) {
                return ((SubStageConfigurationRow)(this.Rows.Find(new object[] {
                            SubStageConfigurationId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SubStageConfigurationDataTable cln = ((SubStageConfigurationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubStageConfigurationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSubStageConfigurationId = base.Columns["SubStageConfigurationId"];
                this.columnCodeGenerationLanguage = base.Columns["CodeGenerationLanguage"];
                this.columnCodeGenerationPath = base.Columns["CodeGenerationPath"];
                this.columnOrganizeCodeByProvider = base.Columns["OrganizeCodeByProvider"];
                this.columnWebServerPort = base.Columns["WebServerPort"];
                this.columnWebServerRootPath = base.Columns["WebServerRootPath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSubStageConfigurationId = new global::System.Data.DataColumn("SubStageConfigurationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubStageConfigurationId);
                this.columnCodeGenerationLanguage = new global::System.Data.DataColumn("CodeGenerationLanguage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeGenerationLanguage);
                this.columnCodeGenerationPath = new global::System.Data.DataColumn("CodeGenerationPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeGenerationPath);
                this.columnOrganizeCodeByProvider = new global::System.Data.DataColumn("OrganizeCodeByProvider", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizeCodeByProvider);
                this.columnWebServerPort = new global::System.Data.DataColumn("WebServerPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebServerPort);
                this.columnWebServerRootPath = new global::System.Data.DataColumn("WebServerRootPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebServerRootPath);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSubStageConfigurationId}, true));
                this.columnSubStageConfigurationId.AutoIncrement = true;
                this.columnSubStageConfigurationId.AllowDBNull = false;
                this.columnSubStageConfigurationId.Unique = true;
                this.columnCodeGenerationLanguage.AllowDBNull = false;
                this.columnCodeGenerationLanguage.DefaultValue = ((string)("C#"));
                this.columnCodeGenerationPath.AllowDBNull = false;
                this.columnCodeGenerationPath.DefaultValue = ((string)(""));
                this.columnOrganizeCodeByProvider.AllowDBNull = false;
                this.columnOrganizeCodeByProvider.Caption = "Whether or not SubStage should place generated code in directories corresponding " +
                    "to the provider name.";
                this.columnOrganizeCodeByProvider.DefaultValue = ((bool)(true));
                this.columnWebServerPort.AllowDBNull = false;
                this.columnWebServerPort.DefaultValue = ((int)(41572));
                this.columnWebServerRootPath.AllowDBNull = false;
                this.columnWebServerRootPath.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRow NewSubStageConfigurationRow() {
                return ((SubStageConfigurationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubStageConfigurationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SubStageConfigurationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubStageConfigurationRowChanged != null)) {
                    this.SubStageConfigurationRowChanged(this, new SubStageConfigurationRowChangeEvent(((SubStageConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubStageConfigurationRowChanging != null)) {
                    this.SubStageConfigurationRowChanging(this, new SubStageConfigurationRowChangeEvent(((SubStageConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubStageConfigurationRowDeleted != null)) {
                    this.SubStageConfigurationRowDeleted(this, new SubStageConfigurationRowChangeEvent(((SubStageConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubStageConfigurationRowDeleting != null)) {
                    this.SubStageConfigurationRowDeleting(this, new SubStageConfigurationRowChangeEvent(((SubStageConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSubStageConfigurationRow(SubStageConfigurationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MasterStore ds = new MasterStore();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubStageConfigurationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectsRow : global::System.Data.DataRow {
            
            private ProjectsDataTable tableProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProjectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProjects = ((ProjectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectId {
                get {
                    return ((int)(this[this.tableProjects.ProjectIdColumn]));
                }
                set {
                    this[this.tableProjects.ProjectIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableProjects.NameColumn]));
                }
                set {
                    this[this.tableProjects.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OriginalLocation {
                get {
                    return ((string)(this[this.tableProjects.OriginalLocationColumn]));
                }
                set {
                    this[this.tableProjects.OriginalLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DefaultProvider {
                get {
                    try {
                        return ((int)(this[this.tableProjects.DefaultProviderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DefaultProvider in Tabelle Projects ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProjects.DefaultProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TemplateDirectory {
                get {
                    return ((string)(this[this.tableProjects.TemplateDirectoryColumn]));
                }
                set {
                    this[this.tableProjects.TemplateDirectoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeGenerationPath {
                get {
                    return ((string)(this[this.tableProjects.CodeGenerationPathColumn]));
                }
                set {
                    this[this.tableProjects.CodeGenerationPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OrganizeCodeByProvider {
                get {
                    return ((bool)(this[this.tableProjects.OrganizeCodeByProviderColumn]));
                }
                set {
                    this[this.tableProjects.OrganizeCodeByProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EnableTrace {
                get {
                    try {
                        return ((bool)(this[this.tableProjects.EnableTraceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte EnableTrace in Tabelle Projects ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProjects.EnableTraceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow DefaultProviderEntry {
                get {
                    return ((ProvidersRow)(this.GetParentRow(this.Table.ParentRelations["FK_Providers_Projects"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Providers_Projects"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDefaultProviderNull() {
                return this.IsNull(this.tableProjects.DefaultProviderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDefaultProviderNull() {
                this[this.tableProjects.DefaultProviderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnableTraceNull() {
                return this.IsNull(this.tableProjects.EnableTraceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnableTraceNull() {
                this[this.tableProjects.EnableTraceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow[] Providers() {
                if ((this.Table.ChildRelations["FK_Projects_Providers"] == null)) {
                    return new ProvidersRow[0];
                }
                else {
                    return ((ProvidersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Projects_Providers"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProviderTypesRow : global::System.Data.DataRow {
            
            private ProviderTypesDataTable tableProviderTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProviderTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProviderTypes = ((ProviderTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderTypeId {
                get {
                    return ((int)(this[this.tableProviderTypes.ProviderTypeIdColumn]));
                }
                set {
                    this[this.tableProviderTypes.ProviderTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DisplayName {
                get {
                    return ((string)(this[this.tableProviderTypes.DisplayNameColumn]));
                }
                set {
                    this[this.tableProviderTypes.DisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InternalName {
                get {
                    return ((string)(this[this.tableProviderTypes.InternalNameColumn]));
                }
                set {
                    this[this.tableProviderTypes.InternalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow[] Providers() {
                if ((this.Table.ChildRelations["FK_ProviderTypes_Providers"] == null)) {
                    return new ProvidersRow[0];
                }
                else {
                    return ((ProvidersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ProviderTypes_Providers"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProvidersRow : global::System.Data.DataRow {
            
            private ProvidersDataTable tableProviders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ProvidersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProviders = ((ProvidersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderId {
                get {
                    return ((int)(this[this.tableProviders.ProviderIdColumn]));
                }
                set {
                    this[this.tableProviders.ProviderIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableProviders.NameColumn]));
                }
                set {
                    this[this.tableProviders.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectId {
                get {
                    try {
                        return ((int)(this[this.tableProviders.ProjectIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ProjectId in Tabelle Providers ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.ProjectIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProviderTypeId {
                get {
                    try {
                        return ((int)(this[this.tableProviders.ProviderTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ProviderTypeId in Tabelle Providers ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.ProviderTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConnectionStringId {
                get {
                    try {
                        return ((int)(this[this.tableProviders.ConnectionStringIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ConnectionStringId in Tabelle Providers ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.ConnectionStringIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeGenerationPath {
                get {
                    return ((string)(this[this.tableProviders.CodeGenerationPathColumn]));
                }
                set {
                    this[this.tableProviders.CodeGenerationPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OrganizeCodeByProvider {
                get {
                    return ((bool)(this[this.tableProviders.OrganizeCodeByProviderColumn]));
                }
                set {
                    this[this.tableProviders.OrganizeCodeByProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AppendWith {
                get {
                    return ((string)(this[this.tableProviders.AppendWithColumn]));
                }
                set {
                    this[this.tableProviders.AppendWithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdditionalNamespaces {
                get {
                    return ((string)(this[this.tableProviders.AdditionalNamespacesColumn]));
                }
                set {
                    this[this.tableProviders.AdditionalNamespacesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExcludeProcedureList {
                get {
                    return ((string)(this[this.tableProviders.ExcludeProcedureListColumn]));
                }
                set {
                    this[this.tableProviders.ExcludeProcedureListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExcludeTableList {
                get {
                    return ((string)(this[this.tableProviders.ExcludeTableListColumn]));
                }
                set {
                    this[this.tableProviders.ExcludeTableListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ExtractClassNameFromSPName {
                get {
                    return ((bool)(this[this.tableProviders.ExtractClassNameFromSPNameColumn]));
                }
                set {
                    this[this.tableProviders.ExtractClassNameFromSPNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FixDatabaseObjectCasing {
                get {
                    return ((bool)(this[this.tableProviders.FixDatabaseObjectCasingColumn]));
                }
                set {
                    this[this.tableProviders.FixDatabaseObjectCasingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FixPluralClassNames {
                get {
                    return ((bool)(this[this.tableProviders.FixPluralClassNamesColumn]));
                }
                set {
                    this[this.tableProviders.FixPluralClassNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GenerateLazyLoads {
                get {
                    return ((bool)(this[this.tableProviders.GenerateLazyLoadsColumn]));
                }
                set {
                    this[this.tableProviders.GenerateLazyLoadsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GenerateNullableProperties {
                get {
                    try {
                        return ((bool)(this[this.tableProviders.GenerateNullablePropertiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte GenerateNullableProperties in Tabelle Providers ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableProviders.GenerateNullablePropertiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GenerateODSControllers {
                get {
                    return ((bool)(this[this.tableProviders.GenerateODSControllersColumn]));
                }
                set {
                    this[this.tableProviders.GenerateODSControllersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool GenerateRelatedTablesAsProperties {
                get {
                    return ((bool)(this[this.tableProviders.GenerateRelatedTablesAsPropertiesColumn]));
                }
                set {
                    this[this.tableProviders.GenerateRelatedTablesAsPropertiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GeneratedNamespace {
                get {
                    return ((string)(this[this.tableProviders.GeneratedNamespaceColumn]));
                }
                set {
                    this[this.tableProviders.GeneratedNamespaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IncludeProcedureList {
                get {
                    return ((string)(this[this.tableProviders.IncludeProcedureListColumn]));
                }
                set {
                    this[this.tableProviders.IncludeProcedureListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IncludeTableList {
                get {
                    return ((string)(this[this.tableProviders.IncludeTableListColumn]));
                }
                set {
                    this[this.tableProviders.IncludeTableListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ManyToManySuffix {
                get {
                    return ((string)(this[this.tableProviders.ManyToManySuffixColumn]));
                }
                set {
                    this[this.tableProviders.ManyToManySuffixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexDictionaryReplace {
                get {
                    return ((string)(this[this.tableProviders.RegexDictionaryReplaceColumn]));
                }
                set {
                    this[this.tableProviders.RegexDictionaryReplaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RegexIgnoreCase {
                get {
                    return ((bool)(this[this.tableProviders.RegexIgnoreCaseColumn]));
                }
                set {
                    this[this.tableProviders.RegexIgnoreCaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexMatchExpression {
                get {
                    return ((string)(this[this.tableProviders.RegexMatchExpressionColumn]));
                }
                set {
                    this[this.tableProviders.RegexMatchExpressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexReplaceExpression {
                get {
                    return ((string)(this[this.tableProviders.RegexReplaceExpressionColumn]));
                }
                set {
                    this[this.tableProviders.RegexReplaceExpressionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RelatedTableLoadPrefix {
                get {
                    return ((string)(this[this.tableProviders.RelatedTableLoadPrefixColumn]));
                }
                set {
                    this[this.tableProviders.RelatedTableLoadPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RemoveUnderscores {
                get {
                    return ((bool)(this[this.tableProviders.RemoveUnderscoresColumn]));
                }
                set {
                    this[this.tableProviders.RemoveUnderscoresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SetPropertyDefaultsFromDatabase {
                get {
                    return ((bool)(this[this.tableProviders.SetPropertyDefaultsFromDatabaseColumn]));
                }
                set {
                    this[this.tableProviders.SetPropertyDefaultsFromDatabaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPClassName {
                get {
                    return ((string)(this[this.tableProviders.SPClassNameColumn]));
                }
                set {
                    this[this.tableProviders.SPClassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SPStartsWith {
                get {
                    return ((string)(this[this.tableProviders.SPStartsWithColumn]));
                }
                set {
                    this[this.tableProviders.SPStartsWithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StoredProcedureBaseClass {
                get {
                    return ((string)(this[this.tableProviders.StoredProcedureBaseClassColumn]));
                }
                set {
                    this[this.tableProviders.StoredProcedureBaseClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StripColumnText {
                get {
                    return ((string)(this[this.tableProviders.StripColumnTextColumn]));
                }
                set {
                    this[this.tableProviders.StripColumnTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StripParamText {
                get {
                    return ((string)(this[this.tableProviders.StripParamTextColumn]));
                }
                set {
                    this[this.tableProviders.StripParamTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StripSPText {
                get {
                    return ((string)(this[this.tableProviders.StripSPTextColumn]));
                }
                set {
                    this[this.tableProviders.StripSPTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StripTableText {
                get {
                    return ((string)(this[this.tableProviders.StripTableTextColumn]));
                }
                set {
                    this[this.tableProviders.StripTableTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StripViewText {
                get {
                    return ((string)(this[this.tableProviders.StripViewTextColumn]));
                }
                set {
                    this[this.tableProviders.StripViewTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TableBaseClass {
                get {
                    return ((string)(this[this.tableProviders.TableBaseClassColumn]));
                }
                set {
                    this[this.tableProviders.TableBaseClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseExtendedProperties {
                get {
                    return ((bool)(this[this.tableProviders.UseExtendedPropertiesColumn]));
                }
                set {
                    this[this.tableProviders.UseExtendedPropertiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseSPs {
                get {
                    return ((bool)(this[this.tableProviders.UseSPsColumn]));
                }
                set {
                    this[this.tableProviders.UseSPsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UseUTC {
                get {
                    return ((bool)(this[this.tableProviders.UseUTCColumn]));
                }
                set {
                    this[this.tableProviders.UseUTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ViewBaseClass {
                get {
                    return ((string)(this[this.tableProviders.ViewBaseClassColumn]));
                }
                set {
                    this[this.tableProviders.ViewBaseClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ViewStartsWith {
                get {
                    return ((string)(this[this.tableProviders.ViewStartsWithColumn]));
                }
                set {
                    this[this.tableProviders.ViewStartsWithColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow Project {
                get {
                    return ((ProjectsRow)(this.GetParentRow(this.Table.ParentRelations["FK_Projects_Providers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Projects_Providers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow ConnectionString {
                get {
                    return ((ConnectionStringsRow)(this.GetParentRow(this.Table.ParentRelations["FK_ConnectionStrings_Providers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ConnectionStrings_Providers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow ProviderType {
                get {
                    return ((ProviderTypesRow)(this.GetParentRow(this.Table.ParentRelations["FK_ProviderTypes_Providers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ProviderTypes_Providers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectIdNull() {
                return this.IsNull(this.tableProviders.ProjectIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectIdNull() {
                this[this.tableProviders.ProjectIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProviderTypeIdNull() {
                return this.IsNull(this.tableProviders.ProviderTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProviderTypeIdNull() {
                this[this.tableProviders.ProviderTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConnectionStringIdNull() {
                return this.IsNull(this.tableProviders.ConnectionStringIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConnectionStringIdNull() {
                this[this.tableProviders.ConnectionStringIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenerateNullablePropertiesNull() {
                return this.IsNull(this.tableProviders.GenerateNullablePropertiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenerateNullablePropertiesNull() {
                this[this.tableProviders.GenerateNullablePropertiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow[] DefaultForProject() {
                if ((this.Table.ChildRelations["FK_Providers_Projects"] == null)) {
                    return new ProjectsRow[0];
                }
                else {
                    return ((ProjectsRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Providers_Projects"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ConnectionStringsRow : global::System.Data.DataRow {
            
            private ConnectionStringsDataTable tableConnectionStrings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConnectionStringsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnectionStrings = ((ConnectionStringsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ConnectionStringId {
                get {
                    return ((int)(this[this.tableConnectionStrings.ConnectionStringIdColumn]));
                }
                set {
                    this[this.tableConnectionStrings.ConnectionStringIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    return ((string)(this[this.tableConnectionStrings.NameColumn]));
                }
                set {
                    this[this.tableConnectionStrings.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConnectionString {
                get {
                    return ((string)(this[this.tableConnectionStrings.ConnectionStringColumn]));
                }
                set {
                    this[this.tableConnectionStrings.ConnectionStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow[] Providers() {
                if ((this.Table.ChildRelations["FK_ConnectionStrings_Providers"] == null)) {
                    return new ProvidersRow[0];
                }
                else {
                    return ((ProvidersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ConnectionStrings_Providers"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SubStageConfigurationRow : global::System.Data.DataRow {
            
            private SubStageConfigurationDataTable tableSubStageConfiguration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SubStageConfigurationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubStageConfiguration = ((SubStageConfigurationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubStageConfigurationId {
                get {
                    return ((int)(this[this.tableSubStageConfiguration.SubStageConfigurationIdColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.SubStageConfigurationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeGenerationLanguage {
                get {
                    return ((string)(this[this.tableSubStageConfiguration.CodeGenerationLanguageColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.CodeGenerationLanguageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeGenerationPath {
                get {
                    return ((string)(this[this.tableSubStageConfiguration.CodeGenerationPathColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.CodeGenerationPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OrganizeCodeByProvider {
                get {
                    return ((bool)(this[this.tableSubStageConfiguration.OrganizeCodeByProviderColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.OrganizeCodeByProviderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int WebServerPort {
                get {
                    return ((int)(this[this.tableSubStageConfiguration.WebServerPortColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.WebServerPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WebServerRootPath {
                get {
                    return ((string)(this[this.tableSubStageConfiguration.WebServerRootPathColumn]));
                }
                set {
                    this[this.tableSubStageConfiguration.WebServerRootPathColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProjectsRowChangeEvent : global::System.EventArgs {
            
            private ProjectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRowChangeEvent(ProjectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProjectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProviderTypesRowChangeEvent : global::System.EventArgs {
            
            private ProviderTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRowChangeEvent(ProviderTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProviderTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ProvidersRowChangeEvent : global::System.EventArgs {
            
            private ProvidersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRowChangeEvent(ProvidersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ProvidersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ConnectionStringsRowChangeEvent : global::System.EventArgs {
            
            private ConnectionStringsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRowChangeEvent(ConnectionStringsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConnectionStringsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SubStageConfigurationRowChangeEvent : global::System.EventArgs {
            
            private SubStageConfigurationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRowChangeEvent(SubStageConfigurationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SubStageConfigurationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591